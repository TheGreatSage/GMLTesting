<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_select_turtleshoot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rot=0;
rot_img=0;
p=0;
plane=surface_create(128,128);
alpha=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if rot_img==0{
   rot_img=1;}
else{
   rot_img=0;
}
if alpha != -0.2 {
   alpha-=0.05;
} else {
  alpha=1;
}

if p==2 &amp;&amp; oTerminal.priority == 0 {
   if keyboard_check_pressed(vk_enter) {
    room_goto(room_defend);
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_default();
if !surface_exists(plane){
   plane=surface_create(128,128);
} else {
   surface_set_target(plane)
    if p!=2 {draw_clear_alpha(c_black,.1);} else {draw_clear(c_white);}
    draw_default();  
    if p==2 { draw_set_alpha(1); } else { draw_set_alpha(.5); }
    draw_sprite(spr_select_turtleshoot,0,64,0);
    draw_set_alpha(1);
    draw_text(64,5,'Shooting Range');
    draw_default();
    draw_set_colour(c_green);    
    if p==2 { draw_set_alpha(1); } else { draw_set_alpha(0.5); }
    draw_rectangle(0,116,128,128,false);
    draw_default();
    draw_set_alpha(1);
    draw_sprite(spr_player,0,120,96)
    draw_sprite_ext(spr_minigun_1,rot_img,89,95,1,1,0,-1,1)
    draw_default();
    draw_set_colour(c_yellow);
    if p==2 { draw_set_alpha(.8); } else { draw_set_alpha(.4); }
    draw_line_width(89,103,0,103+(random_range(-2.5,2.5)),1)
    draw_default();
   surface_reset_target();

     if p==1{
        draw_surface_part(plane,0,0,64,128,x-64,y);
     } else if p==2{
        draw_surface_part(plane,0,0,128,128,x-64,y);
        draw_words('Press Enter', x, y-10, .3, alpha)
     } else if p==3{
        draw_surface_part(plane,64,0,64,128,x,y);
     }
}






</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
